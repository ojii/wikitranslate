{"version":3,"sources":["main.js"],"names":[],"mappings":";;AAAA,IAAM,IAAI,GAAG,CAAC,YAAM;AAChB,QAAI,KAAK,GAAG,CAAC,CAAC;AACd,QAAM,OAAO,GAAG,IAAI,CAAC;;AAErB,WAAO,UAAC,GAAG;eAAK,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AAC7C,gBAAM,QAAQ,GAAG,YAAY,GAAG,KAAK,EAAE,CAAC;AACxC,gBAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,YAAM;AACtC,sBAAM,CAAC,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;aACzC,EAAE,OAAO,CAAC,CAAC;;AAEZ,kBAAM,CAAC,QAAQ,CAAC,GAAG,UAAC,QAAQ,EAAK;AAC7B,sBAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;AAC/B,uBAAO,CAAC,QAAQ,CAAC,CAAC;aACrB,CAAC;AACF,gBAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAChD,kBAAM,CAAC,IAAI,GAAG,iBAAiB,CAAC;AAChC,kBAAM,CAAC,KAAK,GAAG,IAAI,CAAC;AACpB,kBAAM,CAAC,GAAG,QAAM,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAA,iBAAa,QAAQ,AAAE,CAAC;AAClF,oBAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SAChE,CAAC;KAAA,CAAC;CACN,CAAA,EAAG,CAAC;;AAGL,CAAC,YAAM;AACH,QAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC;QAC5C,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC;QAC1C,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC;QAC1C,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;;AAE/C,YAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAC,CAAC,EAAK;AAC9D,YAAM,KAAK,GAAG,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC;YAC1C,KAAK,GAAG,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC;YACxC,IAAI,GAAG,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC5C,YAAI,cAAY,KAAK,qDAAgD,IAAI,+BAA0B,KAAK,yCAAsC,CAAC,IAAI,CAAC,UAAC,IAAI,EAAK;AAC1J,gBAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,gBAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;AACvB,sBAAM,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aAC/C,MAAM;AACH,sBAAM,CAAC,WAAW,GAAG,EAAE,CAAC;aAC3B;SACJ,CAAC,SAAM,CAAC,UAAC,MAAM,EAAK;AACjB,kBAAM,CAAC,WAAW,GAAG,OAAO,CAAC;SAChC,CAAC,CAAC;AACH,SAAC,CAAC,cAAc,EAAE,CAAC;AACnB,eAAO,KAAK,CAAC;KAChB,CAAC,CAAC;CACN,CAAA,EAAG,CAAC","file":"main-compiled.js","sourcesContent":["const load = (() => {\n    let index = 0;\n    const timeout = 5000;\n\n    return (url) => new Promise((resolve, reject) => {\n        const callback = '__callback' + index++;\n        const timeoutID = window.setTimeout(() => {\n            reject(new Error('Request timeout.'));\n        }, timeout);\n\n        window[callback] = (response) => {\n            window.clearTimeout(timeoutID);\n            resolve(response);\n        };\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.src = `${url}${(url.indexOf('?') === -1 ? '?' : '&')}callback=${callback}`;\n        document.getElementsByTagName('head')[0].appendChild(script);\n    });\n})();\n\n\n(() => {\n    const search = document.getElementById('search'),\n        source = document.getElementById('source'),\n        target = document.getElementById('target'),\n        result = document.getElementById('result');\n\n    document.getElementById('form').addEventListener('submit', (e) => {\n        const slang = encodeURIComponent(source.value),\n            tlang = encodeURIComponent(target.value),\n            term = encodeURIComponent(search.value);\n        load(`https://${slang}.wikipedia.org/w/api.php?action=query&titles=${term}&prop=langlinks&lllang=${tlang}&format=json&callback=processResult`).then((data) => {\n            const page = data.query.pages[Object.keys(data.query.pages)[0]];\n            if (page.langlinks.length) {\n                result.textContent = page.langlinks[0]['*'];\n            } else {\n                result.textContent = '';\n            }\n        }).catch((reason) => {\n            result.textContent = 'Error';\n        });\n        e.preventDefault();\n        return false;\n    });\n})();\n"]}